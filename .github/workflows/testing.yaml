name: Testing

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  pytest:
    name: Tests Py${{ matrix.python-version }} - Ansible ${{ matrix.ansible-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.8, 3.9 ]
        # See https://www.ansible.com/blog/ansible-3.0.0-qa and https://docs.ansible.com/ansible/devel/reference_appendices/release_and_maintenance.html
        ansible-version: [ 2.12.9, 2.13.4 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Setup Python ${{ matrix.python-version }}
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install prereqs
        run: |
          pip install ansible-core==${{ matrix.ansible-version }} virtualenv setuptools wheel coveralls
          pip install -r tests/requirements_tests.txt
          pip freeze
          sudo apt-get install -y graphviz
          ansible-galaxy install -r tests/fixtures/requirements.yml

      - name: Pytest
        env:
          PY_COLORS: "1"
        run: make test

      - name: Upload generated SVGs as artefacts
        uses: actions/upload-artifact@v2
        with:
          name: generated-svgs-py${{ matrix.python-version }}-ansible${{ matrix.ansible-version }}
          path: tests/generated_svg/
          if-no-files-found: error # the tests should generate SVGs files

      - name: Test installation in virtualenv
        run: make test_install ANSIBLE_VERSION=${{ matrix.ansible-version }}

      - name: Upload Coverage
        run: cd tests && coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: py${{ matrix.python-version }}-ansible${{ matrix.ansible-version }}
          COVERALLS_PARALLEL: true

  coveralls:
    runs-on: ubuntu-20.04
    name: Finish coverage
    needs: pytest
    container: python:3-slim # just need a simple python container to finish the coverage
    steps:
      - name: Coveralls finish
        run: pip install coveralls && coveralls --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

